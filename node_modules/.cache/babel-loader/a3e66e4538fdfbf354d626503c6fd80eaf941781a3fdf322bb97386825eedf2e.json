{"ast":null,"code":"var _jsxFileName = \"/home/natzu/test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavBar from './components/NavBar';\nimport Banner from './components/Banner';\nimport CapsulesDataGrid from './components/DataGrid'; // Import the CapsulesDataGrid component\nimport CapsulesSearchForm from './components/SearchForm'; // Import the CapsulesSearchForm component\nimport axios from 'axios';\nimport 'tailwindcss/tailwind.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [capsules, setCapsules] = useState([]); // Change 'data' to 'capsules'\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    capsule_serial: '',\n    status: '',\n    type: ''\n  });\n  useEffect(() => {\n    // Fetch data from the SpaceX API for capsules when the component mounts\n    axios.get('https://api.spacexdata.com/v3/capsules') // Update the API URL\n    .then(response => {\n      setCapsules(response.data); // Update to set capsules\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching capsule data:', error);\n      setLoading(false);\n    });\n  }, []);\n  const handleSearch = newFilters => {\n    setFilters(newFilters);\n  };\n\n  // Function to filter capsules based on search criteria\n  const filteredCapsules = capsules.filter(capsule => {\n    return (!filters.capsule_serial || capsule.capsule_serial.includes(filters.capsule_serial)) && (!filters.status || capsule.status.includes(filters.status)) && (!filters.type || capsule.type.includes(filters.type));\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App m-\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CapsulesSearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CapsulesDataGrid, {\n      capsules: filteredCapsules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LLjp/yXNWe13IdpyTfm+1mR27Bw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Banner","CapsulesDataGrid","CapsulesSearchForm","axios","jsxDEV","_jsxDEV","App","_s","capsules","setCapsules","loading","setLoading","filters","setFilters","capsule_serial","status","type","get","then","response","data","catch","error","console","handleSearch","newFilters","filteredCapsules","filter","capsule","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","_c","$RefreshReg$"],"sources":["/home/natzu/test/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NavBar from './components/NavBar';\nimport Banner from './components/Banner';\nimport CapsulesDataGrid from './components/DataGrid'; // Import the CapsulesDataGrid component\nimport CapsulesSearchForm from './components/SearchForm'; // Import the CapsulesSearchForm component\nimport axios from 'axios';\nimport 'tailwindcss/tailwind.css'\n\nfunction App() {\n  const [capsules, setCapsules] = useState([]); // Change 'data' to 'capsules'\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    capsule_serial: '',\n    status: '',\n    type: '',\n  });\n\n  useEffect(() => {\n    // Fetch data from the SpaceX API for capsules when the component mounts\n    axios.get('https://api.spacexdata.com/v3/capsules') // Update the API URL\n      .then((response) => {\n        setCapsules(response.data); // Update to set capsules\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching capsule data:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleSearch = (newFilters) => {\n    setFilters(newFilters);\n  };\n\n  // Function to filter capsules based on search criteria\n  const filteredCapsules = capsules.filter((capsule) => {\n    return (\n      (!filters.capsule_serial || capsule.capsule_serial.includes(filters.capsule_serial)) &&\n      (!filters.status || capsule.status.includes(filters.status)) &&\n      (!filters.type || capsule.type.includes(filters.type))\n    );\n  });\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App m-\">\n      {/* <NavBar /> */}\n      <Banner />\n      <CapsulesSearchForm onSearch={handleSearch} />\n      <CapsulesDataGrid capsules={filteredCapsules} /> {/* Use the CapsulesDataGrid component */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}